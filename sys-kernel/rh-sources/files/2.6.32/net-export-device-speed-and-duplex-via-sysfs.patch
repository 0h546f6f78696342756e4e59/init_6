From: Andy Gospodarek <gospo@redhat.com>
Date: Tue, 24 Nov 2009 16:27:39 -0500
Subject: [net] export device speed and duplex via sysfs
Message-id: <20091005205523.GT29804@gospo.rdu.redhat.com>
Patchwork-id: 21047
O-Subject: [RHEL6 PATCH] net: export device speed and duplex via sysfs
Bugzilla: 453432
RH-Acked-by: Neil Horman <nhorman@redhat.com>
RH-Acked-by: Stefan Assmann <sassmann@redhat.com>
RH-Acked-by: Stanislaw Gruszka <sgruszka@redhat.com>
RH-Acked-by: David S. Miller <davem@redhat.com>

Backport of the following patch recently accepted into Dave's
net-next-2.6 tree:

    commit d519e17e2d01a0ee9abe083019532061b4438065
    Author: Andy Gospodarek <andy@greyhouse.net>
    Date:   Fri Oct 2 09:26:12 2009 +0000

        net: export device speed and duplex via sysfs

        This patch exports the link-speed (in Mbps) and duplex of an interface
        via sysfs.  This eliminates the need to use ethtool just to check the
        link-speed.  Not requiring 'ethtool' and not relying on the SIOCETHTOOL
        ioctl should be helpful in an embedded environment where space is at a
        premium as well.

        NOTE: This patch also intentionally allows non-root users to check the link
        speed and duplex -- something not possible with ethtool.

        Here's some sample output:

        # cat /sys/class/net/eth0/speed
        100
        # cat /sys/class/net/eth0/duplex
        half
        # ethtool eth0
        Settings for eth0:
                Supported ports: [ TP ]
                Supported link modes:   10baseT/Half 10baseT/Full
                                        100baseT/Half 100baseT/Full
                                        1000baseT/Half 1000baseT/Full
                Supports auto-negotiation: Yes
                Advertised link modes:  Not reported
                Advertised auto-negotiation: No
                Speed: 100Mb/s
                Duplex: Half
                Port: Twisted Pair
                PHYAD: 1
                Transceiver: internal
                Auto-negotiation: off
                Supports Wake-on: g
                Wake-on: g
                Current message level: 0x000000ff (255)
                Link detected: yes

        Signed-off-by: David S. Miller <davem@davemloft.net>

This will resolve the request in RHBZ 453432.

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/net/core/net-sysfs.c b/net/core/net-sysfs.c
index 427ded8..4242e94 100644
--- a/net/core/net-sysfs.c
+++ b/net/core/net-sysfs.c
@@ -130,6 +130,44 @@ static ssize_t show_carrier(struct device *dev,
 	return -EINVAL;
 }
 
+static ssize_t show_speed(struct device *dev,
+			  struct device_attribute *attr, char *buf)
+{
+	struct net_device *netdev = to_net_dev(dev);
+	int ret = -EINVAL;
+
+	if (!rtnl_trylock())
+		return restart_syscall();
+
+	if (netif_running(netdev) && netdev->ethtool_ops->get_settings) {
+		struct ethtool_cmd cmd = { ETHTOOL_GSET };
+
+		if (!netdev->ethtool_ops->get_settings(netdev, &cmd))
+			ret = sprintf(buf, fmt_dec, ethtool_cmd_speed(&cmd));
+	}
+	rtnl_unlock();
+	return ret;
+}
+
+static ssize_t show_duplex(struct device *dev,
+			   struct device_attribute *attr, char *buf)
+{
+	struct net_device *netdev = to_net_dev(dev);
+	int ret = -EINVAL;
+
+	if (!rtnl_trylock())
+		return restart_syscall();
+
+	if (netif_running(netdev) && netdev->ethtool_ops->get_settings) {
+		struct ethtool_cmd cmd = { ETHTOOL_GSET };
+
+		if (!netdev->ethtool_ops->get_settings(netdev, &cmd))
+			ret = sprintf(buf, "%s\n", cmd.duplex ? "full" : "half");
+	}
+	rtnl_unlock();
+	return ret;
+}
+
 static ssize_t show_dormant(struct device *dev,
 			    struct device_attribute *attr, char *buf)
 {
@@ -259,6 +297,8 @@ static struct device_attribute net_class_attributes[] = {
 	__ATTR(address, S_IRUGO, show_address, NULL),
 	__ATTR(broadcast, S_IRUGO, show_broadcast, NULL),
 	__ATTR(carrier, S_IRUGO, show_carrier, NULL),
+	__ATTR(speed, S_IRUGO, show_speed, NULL),
+	__ATTR(duplex, S_IRUGO, show_duplex, NULL),
 	__ATTR(dormant, S_IRUGO, show_dormant, NULL),
 	__ATTR(operstate, S_IRUGO, show_operstate, NULL),
 	__ATTR(mtu, S_IRUGO | S_IWUSR, show_mtu, store_mtu),
