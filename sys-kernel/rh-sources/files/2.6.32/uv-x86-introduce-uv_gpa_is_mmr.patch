From: George Beshers <gbeshers@redhat.com>
Date: Thu, 17 Dec 2009 18:45:04 -0500
Subject: [uv] x86: introduce uv_gpa_is_mmr
Message-id: <20091217133123.25514.71254.sendpatchset@localhost.localdomain>
Patchwork-id: 22093
O-Subject: [RHEL6 PATCH 3/8] x86: uv: introduce uv_gpa_is_mmr
Bugzilla: 548181
RH-Acked-by: Pete Zaitcev <zaitcev@redhat.com>

commit fae419f2abd15ab7d1cd1413e6683a276a4e14e2
Author: Robin Holt <holt@sgi.com>
Date:   Tue Dec 15 16:47:54 2009 -0800

    x86: uv: introduce uv_gpa_is_mmr

    Provide a mechanism for determining if a global physical address is
    pointing to a UV hub MMR.

    Signed-off-by: Robin Holt <holt@sgi.com>
    Cc: Jack Steiner <steiner@sgi.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/arch/x86/include/asm/uv/uv_hub.h b/arch/x86/include/asm/uv/uv_hub.h
index 0cc955f..8f1332b 100644
--- a/arch/x86/include/asm/uv/uv_hub.h
+++ b/arch/x86/include/asm/uv/uv_hub.h
@@ -232,6 +232,13 @@ static inline unsigned long uv_gpa(void *v)
 	return uv_soc_phys_ram_to_gpa(__pa(v));
 }
 
+/* Top two bits indicate the requested address is in MMR space.  */
+static inline int
+uv_gpa_in_mmr_space(unsigned long gpa)
+{
+	return (gpa >> 62) == 0x3UL;
+}
+
 /* UV global physical address --> socket phys RAM */
 static inline unsigned long uv_gpa_to_soc_phys_ram(unsigned long gpa)
 {
