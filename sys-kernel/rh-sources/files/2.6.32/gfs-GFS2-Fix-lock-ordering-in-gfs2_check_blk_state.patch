From: Steven Whitehouse <swhiteho@redhat.com>
Date: Thu, 14 Jan 2010 11:10:01 -0500
Subject: [gfs] GFS2: Fix lock ordering in gfs2_check_blk_state()
Message-id: <1263467401.2611.18.camel@localhost>
Patchwork-id: 22506
O-Subject: [RHEL6] GFS2: Fix lock ordering in gfs2_check_blk_state() (bz #554673)
Bugzilla: 554673
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>

Hi,

Here is a patch to fix a lock ordering bug directly from upstream. The
bugzilla is #554673. This is required to fix a regression introduced
during a previous bug fix,

Steve.

From: Steven Whitehouse <swhiteho@redhat.com>
Date: Fri, 6 Nov 2009 11:10:51 +0000 (+0000)
Subject: GFS2: Locking order fix in gfs2_check_blk_state
X-Git-Tag: v2.6.33-rc1~410^2~4
X-Git-Url: http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Ftorvalds%2Flinux-2.6.git;a=commitdiff_plain;h=2c77634965ee28c8b4790ffb5e83dd5ff7ac8988

GFS2: Locking order fix in gfs2_check_blk_state

In some cases we already have the rindex lock when
we enter this function.

Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

diff --git a/fs/gfs2/rgrp.c b/fs/gfs2/rgrp.c
index 8f1cfb0..0608f49 100644
--- a/fs/gfs2/rgrp.c
+++ b/fs/gfs2/rgrp.c
@@ -1710,11 +1710,16 @@ int gfs2_check_blk_type(struct gfs2_sbd *sdp, u64 no_addr, unsigned int type)
 {
 	struct gfs2_rgrpd *rgd;
 	struct gfs2_holder ri_gh, rgd_gh;
+	struct gfs2_inode *ip = GFS2_I(sdp->sd_rindex);
+	int ri_locked = 0;
 	int error;
 
-	error = gfs2_rindex_hold(sdp, &ri_gh);
-	if (error)
-		goto fail;
+	if (!gfs2_glock_is_locked_by_me(ip->i_gl)) {
+		error = gfs2_rindex_hold(sdp, &ri_gh);
+		if (error)
+			goto fail;
+		ri_locked = 1;
+	}
 
 	error = -EINVAL;
 	rgd = gfs2_blk2rgrpd(sdp, no_addr);
@@ -1730,7 +1735,8 @@ int gfs2_check_blk_type(struct gfs2_sbd *sdp, u64 no_addr, unsigned int type)
 
 	gfs2_glock_dq_uninit(&rgd_gh);
 fail_rindex:
-	gfs2_glock_dq_uninit(&ri_gh);
+	if (ri_locked)
+		gfs2_glock_dq_uninit(&ri_gh);
 fail:
 	return error;
 }
