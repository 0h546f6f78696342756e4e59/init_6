From: Tomas Henzl <thenzl@redhat.com>
Date: Mon, 22 Feb 2010 14:21:20 -0500
Subject: [scsi] megaraid_sas: fix for 32bit apps
Message-id: <4B8292E0.1010307@redhat.com>
Patchwork-id: 23394
O-Subject: [RHEL6 PATCH] bz#559941 megaraid_sas: fix for 32bit apps
Bugzilla: 559941
RH-Acked-by: Rob Evers <revers@redhat.com>

This is for bz#559941

This should resolve a problem introduced by the last
driver update to v4.17.
Part of this patch in function megasas_mgmt_fw_ioctl
should have resolved a problem with a 64bit pointer
stored in a u32.
-      u32 *sense_ptr;
+      unsigned long *sense_ptr;

...
          sense_ptr =
-            (u32 *) ((unsigned long)cmd->frame + ioc->sense_off);
+            (unsigned long *) ((unsigned long)cmd->frame + ioc->sense_off);
          *sense_ptr = sense_handle;
...
-      sense_ptr = (u32 *) ((unsigned long)ioc->frame.raw +
-                             ioc->sense_off);
+      sense_ptr = (unsigned long *) ((unsigned long)ioc->frame.raw +
+                       ioc->sense_off);

       if (copy_to_user((void __user *)((unsigned long)(*sense_ptr)),
                        sense, ioc->sense_len)) {
...
This on the other side caused problems for 32bit
programs in 64 bit os, for example Dell's 'open manage'(omsa).

The patch for this is now upstrem -
[SCSI] megaraid_sas: fix for 32bit apps b3dc1a212e5167984616445990c76056034f8eeb
a similar patch is in rhel5.

Tomas

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/drivers/scsi/megaraid/megaraid_sas.c b/drivers/scsi/megaraid/megaraid_sas.c
index 20719c5..350d1f2 100644
--- a/drivers/scsi/megaraid/megaraid_sas.c
+++ b/drivers/scsi/megaraid/megaraid_sas.c
@@ -3882,6 +3882,7 @@ static int megasas_mgmt_compat_ioctl_fw(struct file *file, unsigned long arg)
 	    compat_alloc_user_space(sizeof(struct megasas_iocpacket));
 	int i;
 	int error = 0;
+	compat_uptr_t ptr;
 
 	if (clear_user(ioc, sizeof(*ioc)))
 		return -EFAULT;
@@ -3894,9 +3895,22 @@ static int megasas_mgmt_compat_ioctl_fw(struct file *file, unsigned long arg)
 	    copy_in_user(&ioc->sge_count, &cioc->sge_count, sizeof(u32)))
 		return -EFAULT;
 
-	for (i = 0; i < MAX_IOCTL_SGE; i++) {
-		compat_uptr_t ptr;
+	/*
+	 * The sense_ptr is used in megasas_mgmt_fw_ioctl only when
+	 * sense_len is not null, so prepare the 64bit value under
+	 * the same condition.
+	 */
+	if (ioc->sense_len) {
+		void __user **sense_ioc_ptr =
+			(void __user **)(ioc->frame.raw + ioc->sense_off);
+		compat_uptr_t *sense_cioc_ptr =
+			(compat_uptr_t *)(cioc->frame.raw + cioc->sense_off);
+		if (get_user(ptr, sense_cioc_ptr) ||
+		    put_user(compat_ptr(ptr), sense_ioc_ptr))
+			return -EFAULT;
+	}
 
+	for (i = 0; i < MAX_IOCTL_SGE; i++) {
 		if (get_user(ptr, &cioc->sgl[i].iov_base) ||
 		    put_user(compat_ptr(ptr), &ioc->sgl[i].iov_base) ||
 		    copy_in_user(&ioc->sgl[i].iov_len,
