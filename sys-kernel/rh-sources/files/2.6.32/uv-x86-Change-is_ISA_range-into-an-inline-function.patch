From: George Beshers <gbeshers@redhat.com>
Date: Thu, 14 Jan 2010 21:49:25 -0500
Subject: [uv] x86: Change is_ISA_range() into an inline function
Message-id: <20100114214033.22817.11877.sendpatchset@dhcp-100-2-194.bos.redhat.com>
Patchwork-id: 22557
O-Subject: [RHEL6 PATCH 5/7] x86: Change is_ISA_range() into an inline function
Bugzilla: 548524
RH-Acked-by: Dean Nelson <dnelson@redhat.com>

commit 65f116f5f16dc3371fce24fb24bc4843b5380ba5
Author: H. Peter Anvin <hpa@zytor.com>
Date:   Mon Nov 23 14:44:39 2009 -0800

    x86: Change is_ISA_range() into an inline function

    Change is_ISA_range() from a macro to an inline function.  This makes
    it type safe, and also allows it to be assigned to a function pointer
    if necessary.

    Signed-off-by: H. Peter Anvin <hpa@zytor.com>
    Acked-by: Thomas Gleixner <tglx@linutronix.de>
    LKML-Reference: <20091119202341.GA4420@sgi.com>

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/arch/x86/include/asm/e820.h b/arch/x86/include/asm/e820.h
index 40b4e61..68b4e0e 100644
--- a/arch/x86/include/asm/e820.h
+++ b/arch/x86/include/asm/e820.h
@@ -61,6 +61,12 @@ struct e820map {
 	struct e820entry map[E820_X_MAX];
 };
 
+#define ISA_START_ADDRESS	0xa0000
+#define ISA_END_ADDRESS		0x100000
+
+#define BIOS_BEGIN		0x000a0000
+#define BIOS_END		0x00100000
+
 #ifdef __KERNEL__
 /* see comment in arch/x86/kernel/e820.c */
 extern struct e820map e820;
@@ -126,15 +132,14 @@ extern void e820_reserve_resources(void);
 extern void e820_reserve_resources_late(void);
 extern void setup_memory_map(void);
 extern char *default_machine_specific_memory_setup(void);
-#endif /* __KERNEL__ */
-#endif /* __ASSEMBLY__ */
 
-#define ISA_START_ADDRESS	0xa0000
-#define ISA_END_ADDRESS		0x100000
-#define is_ISA_range(s, e) ((s) >= ISA_START_ADDRESS && (e) < ISA_END_ADDRESS)
+static inline bool is_ISA_range(u64 s, u64 e)
+{
+	return s >= ISA_START_ADDRESS && e < ISA_END_ADDRESS;
+}
 
-#define BIOS_BEGIN		0x000a0000
-#define BIOS_END		0x00100000
+#endif /* __KERNEL__ */
+#endif /* __ASSEMBLY__ */
 
 #ifdef __KERNEL__
 #include <linux/ioport.h>
