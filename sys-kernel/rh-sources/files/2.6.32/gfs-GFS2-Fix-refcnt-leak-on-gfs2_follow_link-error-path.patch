From: Steven Whitehouse <swhiteho@redhat.com>
Date: Wed, 3 Feb 2010 11:33:21 -0500
Subject: [gfs] GFS2: Fix refcnt leak on gfs2_follow_link() error path
Message-id: <1265196801.2370.13.camel@localhost>
Patchwork-id: 23113
O-Subject: [RHEL6] GFS2: Three one liners from upstream (bz #561307) [1/3]
Bugzilla: 561307
RH-Acked-by: Abhijith Das <adas@redhat.com>
RH-Acked-by: Benjamin Marzinski <bmarzins@redhat.com>
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>

Hi,

This patch fixes a ref count issue. The following two fix a GFP_KERNEL
which should be a GFP_NOFS and a preventative change to using MAX_LFS_FILESIZE
to ensure that we don't run into any trouble later on with sign issues
relating to the metadata inode size. The patches are all in upstream and
have been tested collectively along with other patches,

Steve.

>From 0f585f14d4e34ab701283e9237ac7695cd7c9e31 Mon Sep 17 00:00:00 2001
From: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Date: Tue, 12 Jan 2010 03:36:57 +0900
Subject: [PATCH] GFS2: Fix refcnt leak on gfs2_follow_link() error path

If ->follow_link handler return the error, it should decrement
nd->path refcnt.

This patch fix it.

Signed-off-by: OGAWA Hirofumi <hirofumi@mail.parknet.co.jp>
Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>
Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/fs/gfs2/ops_inode.c b/fs/gfs2/ops_inode.c
index 78f73ca..84350e1 100644
--- a/fs/gfs2/ops_inode.c
+++ b/fs/gfs2/ops_inode.c
@@ -1088,7 +1088,8 @@ static void *gfs2_follow_link(struct dentry *dentry, struct nameidata *nd)
 		error = vfs_follow_link(nd, buf);
 		if (buf != array)
 			kfree(buf);
-	}
+	} else
+		path_put(&nd->path);
 
 	return ERR_PTR(error);
 }
