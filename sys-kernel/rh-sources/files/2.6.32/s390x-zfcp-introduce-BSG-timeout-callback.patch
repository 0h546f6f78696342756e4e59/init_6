From: Hendrik Brueckner <brueckner@redhat.com>
Date: Wed, 20 Jan 2010 13:38:11 -0500
Subject: [s390x] zfcp: introduce BSG timeout callback
Message-id: <1263994692-1095-3-git-send-email-brueckner@redhat.com>
Patchwork-id: 22674
O-Subject: [RHEL6 PATCH 2/3] [s390] zfcp: introduce BSG timeout callback
Bugzilla: 556918
RH-Acked-by: Rob Evers <revers@redhat.com>
RH-Acked-by: Mike Christie <mchristi@redhat.com>

Description
-----------
Kernel panic might occur after a FC BSG requests is aborted while the
corresponding zfcp request is still being processed.
With zfcp, the underlying hardware cannot abort CT or ELS requests,
so there is nothing to do when the block layer timeout expires.

To avoid interference with the block layer timeout, simply indicate
that the block layer timer should be reset.  The timer running in the
hardware for the pending CT or ELS request will return the request
when it expires.

Bugzilla
--------
BZ 556918
https://bugzilla.redhat.com/show_bug.cgi?id=556918

Upstream status of the patch
----------------------------
The patch has been accepted in the scsi-rc-fixes tree and
will be pulled upstream for kernel version 2.6.33.
http://git.kernel.org/?p=linux/kernel/git/jejb/scsi-rc-fixes-2.6.git;a=commit;h=491ca4426ba153f79e72d1ca2a30c926484282b7

Test status
-----------
The patch has been tested and fixes the problem.
The fix has been verified by the IBM test department.

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/drivers/s390/scsi/zfcp_ext.h b/drivers/s390/scsi/zfcp_ext.h
index 40173cb..63d6dff 100644
--- a/drivers/s390/scsi/zfcp_ext.h
+++ b/drivers/s390/scsi/zfcp_ext.h
@@ -104,6 +104,7 @@ extern int zfcp_fc_gs_setup(struct zfcp_adapter *);
 extern void zfcp_fc_gs_destroy(struct zfcp_adapter *);
 extern int zfcp_fc_execute_els_fc_job(struct fc_bsg_job *);
 extern int zfcp_fc_execute_ct_fc_job(struct fc_bsg_job *);
+extern int zfcp_fc_timeout_bsg_job(struct fc_bsg_job *);
 
 /* zfcp_fsf.c */
 extern int zfcp_fsf_open_port(struct zfcp_erp_action *);
diff --git a/drivers/s390/scsi/zfcp_fc.c b/drivers/s390/scsi/zfcp_fc.c
index 21da26e..9b595b0 100644
--- a/drivers/s390/scsi/zfcp_fc.c
+++ b/drivers/s390/scsi/zfcp_fc.c
@@ -857,6 +857,12 @@ int zfcp_fc_execute_ct_fc_job(struct fc_bsg_job *job)
 	return ret;
 }
 
+int zfcp_fc_timeout_bsg_job(struct fc_bsg_job *job)
+{
+	/* hardware tracks timeout, reset bsg timeout to not interfere */
+	return -EAGAIN;
+}
+
 int zfcp_fc_gs_setup(struct zfcp_adapter *adapter)
 {
 	struct zfcp_wka_ports *wka_ports;
diff --git a/drivers/s390/scsi/zfcp_scsi.c b/drivers/s390/scsi/zfcp_scsi.c
index ed4a295..79fce7c 100644
--- a/drivers/s390/scsi/zfcp_scsi.c
+++ b/drivers/s390/scsi/zfcp_scsi.c
@@ -683,6 +683,7 @@ struct fc_function_template zfcp_transport_functions = {
 	.terminate_rport_io = zfcp_scsi_terminate_rport_io,
 	.show_host_port_state = 1,
 	.bsg_request = zfcp_execute_fc_job,
+	.bsg_timeout = zfcp_fc_timeout_bsg_job,
 	/* no functions registered for following dynamic attributes but
 	   directly set by LLDD */
 	.show_host_port_type = 1,
