From: George Beshers <gbeshers@redhat.com>
Date: Fri, 18 Dec 2009 22:27:00 -0500
Subject: [uv] x86: XPC receive message reuse triggers invalid BUG_ON
Message-id: <20091218171319.23145.61313.sendpatchset@localhost.localdomain>
Patchwork-id: 22199
O-Subject: [RHEL6 PATCH 5/6] x86: uv: XPC receive message reuse triggers invalid
	BUG_ON
Bugzilla: 546695
RH-Acked-by: Dean Nelson <dnelson@redhat.com>
RH-Acked-by: Prarit Bhargava <prarit@redhat.com>

commit 046d6c563b1c6226bbf0f84e5b2413ad8ab921a1
Author: Robin Holt <holt@sgi.com>
Date:   Tue Dec 15 16:47:59 2009 -0800

    x86: uv: XPC receive message reuse triggers invalid BUG_ON()

    This was a difficult bug to trip.  XPC was in the middle of sending an
    acknowledgement for a received message.

    In xpc_received_payload_uv():
    .
            ret = xpc_send_gru_msg(ch->sn.uv.cached_notify_gru_mq_desc, msg,
                                   sizeof(struct xpc_notify_mq_msghdr_uv));
            if (ret != xpSuccess)
                    XPC_DEACTIVATE_PARTITION(&xpc_partitions[ch->partid], ret);

            msg->hdr.msg_slot_number += ch->remote_nentries;

    at the point in xpc_send_gru_msg() where the hardware has dispatched the
    acknowledgement, the remote side is able to reuse the message structure
    and send a message with a different slot number.  This problem is made
    worse by interrupts.

    The adjustment of msg_slot_number and the BUG_ON in
    xpc_handle_notify_mq_msg_uv() which verifies the msg_slot_number is
    consistent are only used for debug purposes.  Since a fix for this that
    preserves the debug functionality would either have to infringe upon the
    payload or allocate another structure just for debug, I decided to remove
    it entirely.

    Signed-off-by: Robin Holt <holt@sgi.com>
    Cc: Jack Steiner <steiner@sgi.com>
    Cc: Ingo Molnar <mingo@elte.hu>
    Signed-off-by: Andrew Morton <akpm@linux-foundation.org>
    Signed-off-by: Linus Torvalds <torvalds@linux-foundation.org>

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/drivers/misc/sgi-xp/xpc_uv.c b/drivers/misc/sgi-xp/xpc_uv.c
index 241ea5f..d2f4e91 100644
--- a/drivers/misc/sgi-xp/xpc_uv.c
+++ b/drivers/misc/sgi-xp/xpc_uv.c
@@ -1428,7 +1428,6 @@ xpc_handle_notify_mq_msg_uv(struct xpc_partition *part,
 	msg_slot = ch_uv->recv_msg_slots +
 	    (msg->hdr.msg_slot_number % ch->remote_nentries) * ch->entry_size;
 
-	BUG_ON(msg->hdr.msg_slot_number != msg_slot->hdr.msg_slot_number);
 	BUG_ON(msg_slot->hdr.size != 0);
 
 	memcpy(msg_slot, msg, msg->hdr.size);
@@ -1652,8 +1651,6 @@ xpc_received_payload_uv(struct xpc_channel *ch, void *payload)
 			       sizeof(struct xpc_notify_mq_msghdr_uv));
 	if (ret != xpSuccess)
 		XPC_DEACTIVATE_PARTITION(&xpc_partitions[ch->partid], ret);
-
-	msg->hdr.msg_slot_number += ch->remote_nentries;
 }
 
 static struct xpc_arch_operations xpc_arch_ops_uv = {
