From: Steve Dickson <SteveD@redhat.com>
Date: Tue, 2 Feb 2010 12:17:02 -0500
Subject: [nfs] SUNRPC: NFS kernel APIs shouldn't return ENOENT for "transport not found"
Message-id: <4B6817BE.50007@RedHat.com>
Patchwork-id: 23096
O-Subject: [RHEL6] [PATCH 9/10] SUNRPC: NFS kernel APIs shouldn't return ENOENT
	for "transport not found"
Bugzilla: 560785
RH-Acked-by: Peter Staubach <staubach@redhat.com>
RH-Acked-by: Jeff Layton <jlayton@redhat.com>

commit 68717908155a9dcd4161f4d730fea478712d9794
Author: Chuck Lever <chuck.lever@oracle.com>
Date:   Tue Jan 26 14:04:13 2010 -0500

    SUNRPC: NFS kernel APIs shouldn't return ENOENT for "transport not found"

    write_ports() converts svc_create_xprt()'s ENOENT error return to
    EPROTONOSUPPORT so that rpc.nfsd (in user space) can report an error
    message that makes sense.

    It turns out that several of the other kernel APIs rpc.nfsd use can
    also return ENOENT from svc_create_xprt(), by way of lockd_up().

    On the client side, an NFSv2 or NFSv3 mount request can also return
    the result of lockd_up().  This error may also be returned during an
    NFSv4 mount request, since the NFSv4 callback service uses
    svc_create_xprt() to create the callback listener.  An ENOENT error
    return results in a confusing error message from the mount command.

    Let's have svc_create_xprt() return EPROTONOSUPPORT instead of ENOENT.

    Signed-off-by: Chuck Lever <chuck.lever@oracle.com>
    Signed-off-by: J. Bruce Fields <bfields@citi.umich.edu>

Signed-off-by: Aristeu Rozanski <arozansk@redhat.com>

diff --git a/fs/nfsd/nfsctl.c b/fs/nfsd/nfsctl.c
index 2604c3e..f43ecd6 100644
--- a/fs/nfsd/nfsctl.c
+++ b/fs/nfsd/nfsctl.c
@@ -1002,12 +1002,8 @@ static ssize_t __write_ports_addxprt(char *buf)
 
 	err = svc_create_xprt(nfsd_serv, transport,
 				PF_INET, port, SVC_SOCK_ANONYMOUS);
-	if (err < 0) {
-		/* Give a reasonable perror msg for bad transport string */
-		if (err == -ENOENT)
-			err = -EPROTONOSUPPORT;
+	if (err < 0)
 		return err;
-	}
 	return 0;
 }
 
diff --git a/net/sunrpc/svc_xprt.c b/net/sunrpc/svc_xprt.c
index 60d1c76..98422a7 100644
--- a/net/sunrpc/svc_xprt.c
+++ b/net/sunrpc/svc_xprt.c
@@ -235,7 +235,10 @@ int svc_create_xprt(struct svc_serv *serv, const char *xprt_name,
  err:
 	spin_unlock(&svc_xprt_class_lock);
 	dprintk("svc: transport %s not found\n", xprt_name);
-	return -ENOENT;
+
+	/* This errno is exposed to user space.  Provide a reasonable
+	 * perror msg for a bad transport. */
+	return -EPROTONOSUPPORT;
 }
 EXPORT_SYMBOL_GPL(svc_create_xprt);
 
