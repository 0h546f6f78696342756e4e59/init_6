From: Steven Whitehouse <swhiteho@redhat.com>
Date: Thu, 14 Jan 2010 11:16:18 -0500
Subject: [gfs] GFS2: Fix locking bug in rename
Message-id: <1263467778.2611.22.camel@localhost>
Patchwork-id: 22507
O-Subject: [RHEL6] GFS2: Fix locking bug in rename (bz #547640)
Bugzilla: 547640
RH-Acked-by: Robert S Peterson <rpeterso@redhat.com>

Hi,

This fixes a fairly unlikely bug in rename which has been very tricky
to actually hit. The customer who reported this has also tested this
fix and reported that it has solved the problem he was seeing. The patch
is directly taken from upstream and fixes bz #547640,

Steve.

From: Steven Whitehouse <swhiteho@redhat.com>
Date: Wed, 9 Dec 2009 13:55:12 +0000 (+0000)
Subject: GFS2: Fix locking bug in rename
X-Git-Tag: v2.6.33-rc4~14^2~2
X-Git-Url: http://git.kernel.org/?p=linux%2Fkernel%2Fgit%2Ftorvalds%2Flinux-2.6.git;a=commitdiff_plain;h=24b977b5fdea09bf356428870d32c09a275c8a3e

GFS2: Fix locking bug in rename

The rename code was taking a resource group lock in cases where
it wasn't actually needed, this caused problems if the rename
was resulting in an inode being unlinked. The patch ensures that
we only take the rgrp lock early if it is really needed.

Signed-off-by: Steven Whitehouse <swhiteho@redhat.com>

diff --git a/fs/gfs2/ops_inode.c b/fs/gfs2/ops_inode.c
index 247436c..78f73ca 100644
--- a/fs/gfs2/ops_inode.c
+++ b/fs/gfs2/ops_inode.c
@@ -748,7 +748,7 @@ static int gfs2_rename(struct inode *odir, struct dentry *odentry,
 	struct gfs2_rgrpd *nrgd;
 	unsigned int num_gh;
 	int dir_rename = 0;
-	int alloc_required;
+	int alloc_required = 0;
 	unsigned int x;
 	int error;
 
@@ -867,7 +867,9 @@ static int gfs2_rename(struct inode *odir, struct dentry *odentry,
 			goto out_gunlock;
 	}
 
-	alloc_required = error = gfs2_diradd_alloc_required(ndir, &ndentry->d_name);
+	if (nip == NULL)
+		alloc_required = gfs2_diradd_alloc_required(ndir, &ndentry->d_name);
+	error = alloc_required;
 	if (error < 0)
 		goto out_gunlock;
 	error = 0;
